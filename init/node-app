#!/bin/bash

# chkconfig: 345 95 05
# description: node-app is a script for starting a node app on boot.

# source basic init functions
. /etc/init.d/functions

# die functions
die () {
    echo "$@" 1>&2 ; exit 1;
}

## adapt the following variables to match
## you environment:
name="{{ APPNAME }}"
prog="$name"
node_user={{ NODE_USER }}

node_env="production"
NODE_APP='app.js'
APP_DIR='/u01/nodejs/app_root_dir';
PID_FILE="/var/run/${prog}.pid"
LOG_FILE=$APP_DIR/log/${name}.log
CONFIG_DIR=$APP_DIR/config
PORT=1234
NODE_EXEC=$(which node)

RETVAL=0

if [ -z $APP_DIR ] || [ -z $PORT ] || [ -z $node_user ]; then
    die "unconfigured $prog, cannot start"
fi

if [ -z $NODE_EXEC ]; then
    die "cannot find nodejs in the PATH, exiting"
fi

start (){
    echo -n $"starting $prog "
    cd $APP_DIR
    daemon --user=$node_user "export NODE_ENV=$node_env NODE_CONFIG_DIR=$CONFIG_DIR PORT=$PORT; $NODE_EXEC $APP_DIR/$NODE_APP &" 1>$LOG_FILE 2>&1 
    RETVAL=$?
    pgrep -u $node_user -f "$NODE_EXEC $APP_DIR/$NODE_APP" > $PID_FILE    
    [ $RETVAL -eq 0 ] && touch /var/lock/subsys/$prog && success || failure $"$starting $prog"
    echo
    return $RETVAL
}

stop (){
    echo -n $"stopping $prog"
    killproc -p $PID_FILE $prog
    RETVAL=$?
    [ $RETVAL -eq 0 ] && rm -f /var/lock/subsys/$prog || failure $"stopping $prog"
    echo
    return $RETVAL
}

case "$1" in
    start)
        start
    ;;

    stop)
        stop
    ;;

    restart)
        stop
        start
    ;;

    status)
        status $prog
    ;;

    *)
        echo "Usage: $0 {start|stop|restart|status}"
        exit 1
    ;;
esac

